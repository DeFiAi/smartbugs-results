INFO:Slither:Compilation warnings/errors on /dataset/access_control/rubixi.sol:
/dataset/access_control/rubixi.sol:81:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0) throw;
                                         ^---^
/dataset/access_control/rubixi.sol:91:42: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0) throw;
                                         ^---^
/dataset/access_control/rubixi.sol:98:58: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (collectedFees == 0 || _pcent > 100) throw;
                                                         ^---^
/dataset/access_control/rubixi.sol:111:50: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (_mult > 300 || _mult < 120) throw;
                                                 ^---^
/dataset/access_control/rubixi.sol:117:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 if (_fee > 10) throw;
                                ^---^
/dataset/access_control/rubixi.sol:72:26: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                         participants[payoutOrder].etherAddress.send(payoutToSend);
                         ^-------------------------------------------------------^
/dataset/access_control/rubixi.sol:83:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(collectedFees);
                 ^-------------------------^
/dataset/access_control/rubixi.sol:93:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(_amt);
                 ^----------------^
/dataset/access_control/rubixi.sol:101:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 creator.send(feesToCollect);
                 ^-------------------------^
/dataset/access_control/rubixi.sol:21:10: Warning: No visibility specified. Defaulting to "public". 
         function DynamicPyramid() {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:37:10: Warning: No visibility specified. Defaulting to "public". 
         function() {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:80:10: Warning: No visibility specified. Defaulting to "public". 
         function collectAllFees() onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:87:10: Warning: No visibility specified. Defaulting to "public". 
         function collectFeesInEther(uint _amt) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:97:10: Warning: No visibility specified. Defaulting to "public". 
         function collectPercentOfFees(uint _pcent) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:106:10: Warning: No visibility specified. Defaulting to "public". 
         function changeOwner(address _owner) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:110:10: Warning: No visibility specified. Defaulting to "public". 
         function changeMultiplier(uint _mult) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:116:10: Warning: No visibility specified. Defaulting to "public". 
         function changeFeePercentage(uint _fee) onlyowner {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:123:10: Warning: No visibility specified. Defaulting to "public". 
         function currentMultiplier() constant returns(uint multiplier, string info) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:128:10: Warning: No visibility specified. Defaulting to "public". 
         function currentFeePercentage() constant returns(uint fee, string info) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:133:10: Warning: No visibility specified. Defaulting to "public". 
         function currentPyramidBalanceApproximately() constant returns(uint pyramidBalance, string info) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:138:10: Warning: No visibility specified. Defaulting to "public". 
         function nextPayoutWhenPyramidBalanceTotalsApproximately() constant returns(uint balancePayout) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:142:10: Warning: No visibility specified. Defaulting to "public". 
         function feesSeperateFromBalanceApproximately() constant returns(uint fees) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:146:10: Warning: No visibility specified. Defaulting to "public". 
         function totalParticipants() constant returns(uint count) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:150:10: Warning: No visibility specified. Defaulting to "public". 
         function numberOfParticipantsWaitingForPayout() constant returns(uint count) {
         ^ (Relevant source part starts here and spans across multiple lines).
/dataset/access_control/rubixi.sol:154:10: Warning: No visibility specified. Defaulting to "public". 
         function participantDetails(uint orderInPyramid) constant returns(address Address, uint Payout) {
         ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Rubixi.addPayout has external calls inside a loop:
	- participants[payoutOrder].etherAddress.send(payoutToSend) (/dataset/access_control/rubixi.sol#72)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Deprecated standard detected @ /dataset/access_control/rubixi.sol#81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /dataset/access_control/rubixi.sol#91:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /dataset/access_control/rubixi.sol#98:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /dataset/access_control/rubixi.sol#111:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /dataset/access_control/rubixi.sol#117:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Rubixi.DynamicPyramid (/dataset/access_control/rubixi.sol#21-23) should be declared external
Rubixi.fallback (/dataset/access_control/rubixi.sol#37-39) should be declared external
Rubixi.collectFeesInEther (/dataset/access_control/rubixi.sol#87-95) should be declared external
Rubixi.collectPercentOfFees (/dataset/access_control/rubixi.sol#97-103) should be declared external
Rubixi.changeOwner (/dataset/access_control/rubixi.sol#106-108) should be declared external
Rubixi.changeMultiplier (/dataset/access_control/rubixi.sol#110-114) should be declared external
Rubixi.changeFeePercentage (/dataset/access_control/rubixi.sol#116-120) should be declared external
Rubixi.currentMultiplier (/dataset/access_control/rubixi.sol#123-126) should be declared external
Rubixi.currentFeePercentage (/dataset/access_control/rubixi.sol#128-131) should be declared external
Rubixi.currentPyramidBalanceApproximately (/dataset/access_control/rubixi.sol#133-136) should be declared external
Rubixi.nextPayoutWhenPyramidBalanceTotalsApproximately (/dataset/access_control/rubixi.sol#138-140) should be declared external
Rubixi.feesSeperateFromBalanceApproximately (/dataset/access_control/rubixi.sol#142-144) should be declared external
Rubixi.totalParticipants (/dataset/access_control/rubixi.sol#146-148) should be declared external
Rubixi.numberOfParticipantsWaitingForPayout (/dataset/access_control/rubixi.sol#150-152) should be declared external
Rubixi.participantDetails (/dataset/access_control/rubixi.sol#154-159) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /dataset/access_control/rubixi.sol:
	- pragma solidity^0.4.15 (/dataset/access_control/rubixi.sol#7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Rubixi.DynamicPyramid' (/dataset/access_control/rubixi.sol#21-23) is not in mixedCase
Parameter '_fee' of Rubixi.addPayout (/dataset/access_control/rubixi.sol#57) is not in mixedCase
Parameter '_amt' of Rubixi.collectFeesInEther (/dataset/access_control/rubixi.sol#87) is not in mixedCase
Parameter '_pcent' of Rubixi.collectPercentOfFees (/dataset/access_control/rubixi.sol#97) is not in mixedCase
Parameter '_owner' of Rubixi.changeOwner (/dataset/access_control/rubixi.sol#106) is not in mixedCase
Parameter '_mult' of Rubixi.changeMultiplier (/dataset/access_control/rubixi.sol#110) is not in mixedCase
Parameter '_fee' of Rubixi.changeFeePercentage (/dataset/access_control/rubixi.sol#116) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/dataset/access_control/rubixi.sol analyzed (1 contracts), 29 result(s) found