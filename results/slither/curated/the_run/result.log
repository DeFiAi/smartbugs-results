INFO:Slither:Compilation warnings/errors on /dataset/bad_randomness/the_run.sol:
/dataset/bad_randomness/the_run.sol:27:9: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
        function theRun() {
        ^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:133:24: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (fees == 0) throw;
                       ^---^
/dataset/bad_randomness/the_run.sol:147:40: Warning: This declaration shadows an existing declaration.
function NextPayout() constant returns(uint NextPayout) {
                                       ^-------------^
/dataset/bad_randomness/the_run.sol:147:1: The shadowed declaration is here:
function NextPayout() constant returns(uint NextPayout) {
^ (Relevant source part starts here and spans across multiple lines).

/dataset/bad_randomness/the_run.sol:156:45: Warning: This declaration shadows an existing declaration.
function WatchWinningPot() constant returns(uint WinningPot) {
                                            ^-------------^
/dataset/bad_randomness/the_run.sol:13:9: The shadowed declaration is here:
        uint private WinningPot = 0;
        ^-------------------------^

/dataset/bad_randomness/the_run.sol:50:21: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                    msg.sender.send(msg.value);
                    ^------------------------^
/dataset/bad_randomness/the_run.sol:54:21: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                    msg.sender.send(msg.value- (20 ether));
                    ^------------------------------------^
/dataset/bad_randomness/the_run.sol:85:25: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                        msg.sender.send(WinningPot); // Bravo !
                        ^-------------------------^
/dataset/bad_randomness/the_run.sol:94:21: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                    players[Payout_id].addr.send(Last_Payout); //pay the man, please !
                    ^---------------------------------------^
/dataset/bad_randomness/the_run.sol:104:38: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint256 constant private salt =  block.timestamp;
                                     ^-------------^
/dataset/bad_randomness/the_run.sol:134:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        admin.send(fees);
        ^--------------^
/dataset/bad_randomness/the_run.sol:141:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        admin.send(fees / 1000 * p);//send a percent of fees
        ^-------------------------^
/dataset/bad_randomness/the_run.sol:27:9: Warning: No visibility specified. Defaulting to "public". 
        function theRun() {
        ^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:42:9: Warning: No visibility specified. Defaulting to "public". 
        function() {
        ^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:111:29: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        uint256 h = uint256(block.blockhash(seed));
                            ^-------------^
/dataset/bad_randomness/the_run.sol:119:5: Warning: No visibility specified. Defaulting to "public". 
    function ChangeOwnership(address _owner) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:122:5: Warning: No visibility specified. Defaulting to "public". 
    function WatchBalance() constant returns(uint TotalBalance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:126:5: Warning: No visibility specified. Defaulting to "public". 
    function WatchBalanceInEther() constant returns(uint TotalBalanceInEther) {
    ^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:132:5: Warning: No visibility specified. Defaulting to "public". 
    function CollectAllFees() onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:139:5: Warning: No visibility specified. Defaulting to "public". 
    function GetAndReduceFeesByFraction(uint p) onlyowner {
    ^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:147:1: Warning: No visibility specified. Defaulting to "public". 
function NextPayout() constant returns(uint NextPayout) {
^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:151:1: Warning: No visibility specified. Defaulting to "public". 
function WatchFees() constant returns(uint CollectedFees) {
^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:156:1: Warning: No visibility specified. Defaulting to "public". 
function WatchWinningPot() constant returns(uint WinningPot) {
^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:160:1: Warning: No visibility specified. Defaulting to "public". 
function WatchLastPayout() constant returns(uint payout) {
^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:164:1: Warning: No visibility specified. Defaulting to "public". 
function Total_of_Players() constant returns(uint NumberOfPlayers) {
^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:168:1: Warning: No visibility specified. Defaulting to "public". 
function PlayerInfo(uint id) constant returns(address Address, uint Payout, bool UserPaid) {
^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:176:1: Warning: No visibility specified. Defaulting to "public". 
function PayoutQueueSize() constant returns(uint QueueSize) {
^ (Relevant source part starts here and spans across multiple lines).
/dataset/bad_randomness/the_run.sol:156:1: Warning: Function state mutability can be restricted to pure
function WatchWinningPot() constant returns(uint WinningPot) {
^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
theRun.NextPayout.NextPayout (local variable @ /dataset/bad_randomness/the_run.sol#147) shadows:
	- theRun.NextPayout (function @ /dataset/bad_randomness/the_run.sol#147-149)
theRun.WatchWinningPot.WinningPot (local variable @ /dataset/bad_randomness/the_run.sol#156) shadows:
	- theRun.WinningPot (state variable @ /dataset/bad_randomness/the_run.sol#13)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
theRun.Participate has external calls inside a loop:
	- players[Payout_id].addr.send(Last_Payout) (/dataset/bad_randomness/the_run.sol#94)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
theRun.Min_multiplier should be constant (/dataset/bad_randomness/the_run.sol#14)
theRun.PotFrac should be constant (/dataset/bad_randomness/the_run.sol#22)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /dataset/bad_randomness/the_run.sol#111:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /dataset/bad_randomness/the_run.sol#133:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
theRun.fallback (/dataset/bad_randomness/the_run.sol#42-44) should be declared external
theRun.ChangeOwnership (/dataset/bad_randomness/the_run.sol#119-121) should be declared external
theRun.WatchBalance (/dataset/bad_randomness/the_run.sol#122-124) should be declared external
theRun.WatchBalanceInEther (/dataset/bad_randomness/the_run.sol#126-128) should be declared external
theRun.CollectAllFees (/dataset/bad_randomness/the_run.sol#132-137) should be declared external
theRun.GetAndReduceFeesByFraction (/dataset/bad_randomness/the_run.sol#139-143) should be declared external
theRun.NextPayout (/dataset/bad_randomness/the_run.sol#147-149) should be declared external
theRun.WatchFees (/dataset/bad_randomness/the_run.sol#151-153) should be declared external
theRun.WatchWinningPot (/dataset/bad_randomness/the_run.sol#156-158) should be declared external
theRun.WatchLastPayout (/dataset/bad_randomness/the_run.sol#160-162) should be declared external
theRun.Total_of_Players (/dataset/bad_randomness/the_run.sol#164-166) should be declared external
theRun.PlayerInfo (/dataset/bad_randomness/the_run.sol#168-174) should be declared external
theRun.PayoutQueueSize (/dataset/bad_randomness/the_run.sol#176-178) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /dataset/bad_randomness/the_run.sol:
	- pragma solidity^0.4.0 (/dataset/bad_randomness/the_run.sol#7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'theRun' (/dataset/bad_randomness/the_run.sol#9-181) is not in CapWords
Function 'theRun.Participate' (/dataset/bad_randomness/the_run.sol#61-100) is not in mixedCase
Parameter 'Max' of theRun.random (/dataset/bad_randomness/the_run.sol#106) is not in mixedCase
Function 'theRun.ChangeOwnership' (/dataset/bad_randomness/the_run.sol#119-121) is not in mixedCase
Parameter '_owner' of theRun.ChangeOwnership (/dataset/bad_randomness/the_run.sol#119) is not in mixedCase
Function 'theRun.WatchBalance' (/dataset/bad_randomness/the_run.sol#122-124) is not in mixedCase
Function 'theRun.WatchBalanceInEther' (/dataset/bad_randomness/the_run.sol#126-128) is not in mixedCase
Function 'theRun.CollectAllFees' (/dataset/bad_randomness/the_run.sol#132-137) is not in mixedCase
Function 'theRun.GetAndReduceFeesByFraction' (/dataset/bad_randomness/the_run.sol#139-143) is not in mixedCase
Function 'theRun.NextPayout' (/dataset/bad_randomness/the_run.sol#147-149) is not in mixedCase
Function 'theRun.WatchFees' (/dataset/bad_randomness/the_run.sol#151-153) is not in mixedCase
Function 'theRun.WatchWinningPot' (/dataset/bad_randomness/the_run.sol#156-158) is not in mixedCase
Function 'theRun.WatchLastPayout' (/dataset/bad_randomness/the_run.sol#160-162) is not in mixedCase
Function 'theRun.Total_of_Players' (/dataset/bad_randomness/the_run.sol#164-166) is not in mixedCase
Function 'theRun.PlayerInfo' (/dataset/bad_randomness/the_run.sol#168-174) is not in mixedCase
Function 'theRun.PayoutQueueSize' (/dataset/bad_randomness/the_run.sol#176-178) is not in mixedCase
Variable 'theRun.Balance' (/dataset/bad_randomness/the_run.sol#10) is not in mixedCase
Variable 'theRun.Payout_id' (/dataset/bad_randomness/the_run.sol#11) is not in mixedCase
Variable 'theRun.Last_Payout' (/dataset/bad_randomness/the_run.sol#12) is not in mixedCase
Variable 'theRun.WinningPot' (/dataset/bad_randomness/the_run.sol#13) is not in mixedCase
Variable 'theRun.Min_multiplier' (/dataset/bad_randomness/the_run.sol#14) is not in mixedCase
Variable 'theRun.PotFrac' (/dataset/bad_randomness/the_run.sol#22) is not in mixedCase
Constant 'theRun.salt' (/dataset/bad_randomness/the_run.sol#104) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/dataset/bad_randomness/the_run.sol analyzed (1 contracts), 43 result(s) found