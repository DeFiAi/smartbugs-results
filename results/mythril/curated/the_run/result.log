{"error": null, "issues": [{"address": 884, "code": "msg.sender.send(msg.value)", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/dataset/bad_randomness/the_run.sol", "function": "fallback", "lineno": 50, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 971, "code": "msg.sender.send(msg.value- (20 ether))", "debug": "", "description": "Multiple sends exist in one transaction, try to isolate each external call into its own transaction. As external calls can fail accidentally or deliberately.\nConsecutive calls: \nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\nCall at address: 2808\n", "filename": "/dataset/bad_randomness/the_run.sol", "function": "fallback", "lineno": 54, "title": "Multiple Calls", "type": "Information"}, {"address": 971, "code": "msg.sender.send(msg.value- (20 ether))", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/dataset/bad_randomness/the_run.sol", "function": "fallback", "lineno": 54, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 1213, "code": "players[id]", "debug": "The exception is triggered under the following conditions:\n\nstorage_9: 0x0\ncalldata_theRun_4: 0x0\ncalldata_theRun_0: 0x63aea3e000000000000000000000000000000000000000000000000000000000\ncalldatasize_theRun: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/dataset/bad_randomness/the_run.sol", "function": "PlayerInfo(uint256)", "lineno": 170, "title": "Exception state", "type": "Informational"}, {"address": 1575, "code": "admin.send(fees)", "debug": "", "description": "A possible transaction order independence vulnerability exists in function CollectAllFees(). The value or direction of the call statement is determined from a tainted storage location", "filename": "/dataset/bad_randomness/the_run.sol", "function": "CollectAllFees()", "lineno": 134, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1575, "code": "admin.send(fees)", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/dataset/bad_randomness/the_run.sol", "function": "CollectAllFees()", "lineno": 134, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 1591, "code": "feeFrac-=1", "debug": "storage_6: 0x0\nstorage_5: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\nstorage_8: 0x0\ncaller: 0x0\ncalldata_theRun_0: 0x7879e19e00000000000000000000000000000000000000000000000000000000\ncalldatasize_theRun: 0x4\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `CollectAllFees()`.\nThe subtraction may result in a value < 0.", "filename": "/dataset/bad_randomness/the_run.sol", "function": "CollectAllFees()", "lineno": 135, "title": "Integer Underflow", "type": "Warning"}, {"address": 1646, "code": "players[Payout_id]", "debug": "The exception is triggered under the following conditions:\n\nstorage_1: 0x0\nstorage_9: 0x0\ncalldata_theRun_0: 0xa88c5ef700000000000000000000000000000000000000000000000000000000\ncalldatasize_theRun: 0x4\ncallvalue: 0x0\n", "description": "A reachable exception (opcode 0xfe) has been detected. This can be caused by type errors, division by zero, out-of-bounds array access, or assert violations. This is acceptable in most situations. Note however that `assert()` should only be used to check invariants. Use `require()` for regular input checking. ", "filename": "/dataset/bad_randomness/the_run.sol", "function": "NextPayout()", "lineno": 148, "title": "Exception state", "type": "Informational"}, {"address": 1787, "code": "feeFrac-=1", "debug": "storage_6: 0x0\nstorage_8: 0x0\ncaller: 0x0\ncalldata_theRun_0: 0xc8edf65e00000000000000000000000000000000000000000000000000000000\ncalldatasize_theRun: 0x4\nstorage_5: 0x0\ncallvalue: 0x0\n", "description": "A possible integer underflow exists in the function `GetAndReduceFeesByFraction(uint256)`.\nThe subtraction may result in a value < 0.", "filename": "/dataset/bad_randomness/the_run.sol", "function": "GetAndReduceFeesByFraction(uint256)", "lineno": 140, "title": "Integer Underflow", "type": "Warning"}, {"address": 1894, "code": "admin.send(fees / 1000 * p)", "debug": "", "description": "A possible transaction order independence vulnerability exists in function GetAndReduceFeesByFraction(uint256). The value or direction of the call statement is determined from a tainted storage location", "filename": "/dataset/bad_randomness/the_run.sol", "function": "GetAndReduceFeesByFraction(uint256)", "lineno": 141, "title": "Transaction order dependence", "type": "Warning"}, {"address": 1894, "code": "admin.send(fees / 1000 * p)", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/dataset/bad_randomness/the_run.sol", "function": "GetAndReduceFeesByFraction(uint256)", "lineno": 141, "title": "Unchecked CALL return value", "type": "Informational"}, {"address": 2808, "code": "players[Payout_id].addr.send(Last_Payout)", "debug": "", "description": "The return value of an external call is not checked. Note that execution continue even if the called contract throws.", "filename": "/dataset/bad_randomness/the_run.sol", "function": "fallback", "lineno": 94, "title": "Unchecked CALL return value", "type": "Informational"}], "success": true}